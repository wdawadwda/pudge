"""
Django settings for SiteOrder project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from datetime import timedelta
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-f$4v5)9v$cv0qiupj5re_vjd2t!$93lqr67so7^fn*m$29m2!@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'djoser',
    'Pudge',
    'corsheaders',
    'rest_framework_swagger',
    'drf_yasg',
    'django_mysql',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'SiteOrder.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'SiteOrder.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases


# # ------ local -------
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': 'site',
#         'USER': 'ruslan',
#         'PASSWORD': '12345',
#         'HOST': 'localhost',
#         'PORT': '5432'
#     }
# }

# DATABASES = {
#   'default': {
#     'ENGINE': 'django.db.backends.mysql',
#     'NAME': 'test',
#     'USER': 'root',
#     'PASSWORD': '123454321',
#     'HOST': 'localhost',
#     'PORT': '3306',
#     }
# }

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'taxitutb_pudge_database',
#         'USER': 'taxitutb_root',
#         'PASSWORD': '123454321rOOt@',
#         'HOST': 'localhost',
#         'PORT': '3306',
#         'OPTIONS': {
#             'charset': 'utf8mb4',
#             'sql_mode': 'traditional',
#             'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
#         },
#         'TEST': {
#             'CHARSET': 'utf8mb4',
#             'COLLATION': 'utf8mb4_unicode_ci',
#         },
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# # # ------ hoster.by -------
# DATABASES = {
#     'default': {
#     'ENGINE': 'django.db.backends.mysql',
#     'OPTIONS': {
#         'sql_mode': 'traditional',
#         },
#     'NAME': 'taxitutb_pudge_database',
#     'USER': 'taxitutb_root',
#     'PASSWORD': '&},;R&#?Fob{',
#     'HOST': 'localhost',
#     'PORT': '3306',
#     }
# }
# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'ru'
# MODELTRANSLATION_DEFAULT_LANGUAGE = 'ru'


LANGUAGES = (
    ('en', 'English'),
    ('ru', 'Russian'),
)

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_TZ = True


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer', #поставить в комментарий
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        # 'rest_framework.authentication.BasicAuthentication',
        # 'rest_framework.authentication.SessionAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 50
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=5),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
    "ROTATE_REFRESH_TOKENS": False,
    "BLACKLIST_AFTER_ROTATION": False,
    "UPDATE_LAST_LOGIN": False,

    "ALGORITHM": "HS256",
    "SIGNING_KEY": SECRET_KEY,
    "VERIFYING_KEY": "",
    "AUDIENCE": None,
    "ISSUER": None,
    "JSON_ENCODER": None,
    "JWK_URL": None,
    "LEEWAY": 0,

    "AUTH_HEADER_TYPES": ("Bearer",),
    "AUTH_HEADER_NAME": "HTTP_AUTHORIZATION",
    "USER_ID_FIELD": "id",
    "USER_ID_CLAIM": "user_id",
    "USER_AUTHENTICATION_RULE": "rest_framework_simplejwt.authentication.default_user_authentication_rule",

    "AUTH_TOKEN_CLASSES": ("rest_framework_simplejwt.tokens.AccessToken",),
    "TOKEN_TYPE_CLAIM": "token_type",
    "TOKEN_USER_CLASS": "rest_framework_simplejwt.models.TokenUser",

    "JTI_CLAIM": "jti",

    "SLIDING_TOKEN_REFRESH_EXP_CLAIM": "refresh_exp",
    "SLIDING_TOKEN_LIFETIME": timedelta(minutes=5),
    "SLIDING_TOKEN_REFRESH_LIFETIME": timedelta(days=1),

    "TOKEN_OBTAIN_SERIALIZER": "rest_framework_simplejwt.serializers.TokenObtainPairSerializer",
    "TOKEN_REFRESH_SERIALIZER": "rest_framework_simplejwt.serializers.TokenRefreshSerializer",
    "TOKEN_VERIFY_SERIALIZER": "rest_framework_simplejwt.serializers.TokenVerifySerializer",
    "TOKEN_BLACKLIST_SERIALIZER": "rest_framework_simplejwt.serializers.TokenBlacklistSerializer",
    "SLIDING_TOKEN_OBTAIN_SERIALIZER": "rest_framework_simplejwt.serializers.TokenObtainSlidingSerializer",
    "SLIDING_TOKEN_REFRESH_SERIALIZER": "rest_framework_simplejwt.serializers.TokenRefreshSlidingSerializer",
}

# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'pudgebelarus@gmail.com'
EMAIL_HOST_PASSWORD = 'jgum dopr iauh nria'
EMAIL_PORT = 587
DEFAULT_FROM_EMAIL  = 'pudgebelarus@gmail.com'

DJOSER = {
    'USERNAME_RESET_CONFIRM_URL': 'username/reset/confirm/{uid}/{token}',
    'PASSWORD_RESET_CONFIRM_URL': 'password/reset/confirm/{uid}/{token}',
    'ACTIVATION_URL': 'activate/{uid}/{token}',
#     'LOGIN_FIELD': 'email',
#     'SET_PASSWORD_RETYPE': True,
#     'USER_CREATE_PASSWORD_RETYPE': True,
#     'USER_CHANGED_EMAIL_CONFIRMATION': True,
#     'USERNAME_CHANGED_EMAIL_CONFIRMATION': True,  # change by Ruslan
    'SEND_ACTIVATION_EMAIL': True,
#     'SEND_CONFIRMATION_EMAIL': True,
#     'PASSWORD_CHANGED_EMAIL_CONFIRMATION': True,
#     'PASSWORD_RESET_CONFIRM_RETYPE': True,
#     'PASSWORD_RESET_SHOW_EMAIL_NOT_FOUND': True,
#     'LOGOUT_ON_PASSWORD_CHANGE': True,
#     'TOKEN_MODEL': None,
    'SERIALIZERS': {},
    # "EMAIL":
    #     {
    #         "activation": ".djoser.email.ActivationEmail",
    #         "confirmation": "djoser.email.ConfirmationEmail",
    #         "password_reset": "djoser.email.PasswordResetEmail",
    #         "password_changed_confirmation": "djoser.email.PasswordChangedConfirmationEmail",
    #         "username_changed_confirmation": "djoser.email.UsernameChangedConfirmationEmail",
    #         "username_reset": "djoser.email.UsernameResetEmail",
    #     }
}

AUTH_USER_MODEL = 'Pudge.CustomUser'

# ------ local -------
ALLOWED_HOSTS = [
    'backend.pudge.by',
    'backend.pudge.vh64.hosterby.com',
    'pudge.by',
    'pudge.vh64.hosterby.com',
    'localhost:5173',
]

# ------ hoster.by -------
CORS_ALLOWED_ORIGINS = [
    'https://backend.pudge.by',
    'https://backend.pudge.vh64.hosterby.com',
    'https://pudge.by',
    'https://pudge.vh64.hosterby.com',
]

# CORS_ALLOW_ALL_ORIGINS: True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# # ------- localhost --------
# STATIC_URL = 'static/'
# SITE_URL = '/site/'
# SITE_ROOT = os.path.join(BASE_DIR, 'site')
# MEDIA_URL = '/media/'
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# ------ hoster.by -------

STATIC_URL = '/static/'
STATIC_ROOT = '/home/taxitutb/pudge/SiteOrder/static/'
MEDIA_URL = '/media/'
MEDIA_ROOT = '/home/taxitutb/pudge/SiteOrder/media/'
SITE_URL = '/site/'
SITE_ROOT = '/home/taxitutb/mysite/site/'

# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
